name: Publish

on:
  push:
    branches:
    - main
    paths-ignore:
    - '**/*.md'


env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}
  REPOSITORY: ${{ github.event.repository.name }}

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: 'write'
      packages: 'write'
      id-token: 'write'

    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-timeout 5s --health-retries 8 --memory=3g

    steps:
      - uses: actions/checkout@v4

      - id: get-version
        name: Compute next version based on previous tag in commit history
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          noVersionBumpBehavior: patch

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go get .

      - name: Run tests
        run: go test ./...

      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker-push-tagged
        name: Tag docker image and push to container registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ env.REPOSITORY }}:${{ steps.get-version.outputs.nextStrict }},${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ env.REPOSITORY }}:latest

      - name: Create github tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.get-version.outputs.next }}",
              sha: context.sha
            })

